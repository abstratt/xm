// automatically generated by Xtext
grammar xmodel.dsl.Xdsl with org.eclipse.xtext.common.Terminals

import "xmbehavior"
import "xmbase"
import "xmstate"
import "http://www.eclipse.org/emf/2002/Ecore"

Namespace:
	'model' name=ID children+=TopLevel*;

TopLevel:
	Class | Primitive;

Primitive:
	'primitive' name=ID;

Class:
	'class' name=ID features+=ClassFeature*;

ClassFeature:
	Attribute | Operation;

Attribute:
	'attribute' name=ID ':' elementType=[Type];

Operation:
	'operation' name=ID '(' parameters+=Parameter* ')' (':' elementType=[Type])? behavior=Activity;

Parameter:
	name=ID ':' elementType=[Type];

Activity:
	{Activity} block=Block;

Block:
	'{' actions+=StatementAction* '}' ;

LiteralClosure:
	'{' parameters+=ClosureParameter* '|' block=Block '}' ;

ClosureParameter: 
	name=ID ;

StatementAction:
	WriteLocalDataAction | ObjectStatementAction | FinalAction | Block | ApplyAction ;

ValueAction:
	SimpleValueAction | '(' ValueAction ')' ;

FinalAction: {FinalAction}
	('return' | '^') => resultValue=ValueAction?;

ExpressionAction:
	CallQueryAction | ReadAttributeAction;

SimpleValueAction:
	ReadSelfAction | LiteralAction | ReadLocalDataAction | CreateObjectAction ;

CallQueryAction:
	target=ValueAction '.' operation=[Operation] '(' ')';

CreateObjectAction: 'new' class=[Class]'(' arguments+=ValueAction* ')';

ExtentAction: 'from' class=[Class];

ApplyAction: 'do' applier=LiteralClosure;

ReduceAction: 'reduce' initial=ValueAction reducer=LiteralClosure;

FilterAction: 'filter' filter=LiteralClosure ;

MapAction: 'map' mapper=LiteralClosure ;

TraverseManyAction: target=ValueAction '->' end=[AssociationRole] ;

OriginalCollectionProducingAction: ExtentAction | TraverseManyAction ;

CollectionTransformingAction: FilterAction | MapAction ;

CollectionConsumingAction: ReduceAction | FilterAction | MapAction ;

CollectionExpressionAction: source=OriginalCollectionProducingAction '|' destination=FinalCollectionConsumingAction;

FinalCollectionConsumingAction: ReduceAction;

ObjectStatementAction:
	=> ({CallActionAction} target=ValueAction '.' operation=[Operation] '(' arguments+=ValueAction* ')')
	|
	=> ({WriteAttributeAction} target=ValueAction '.' attribute=[Attribute] ':=' value=ValueAction);

ReadSelfAction:
	'self';

ReadLocalDataAction:
	localData=[LocalData];

ReadAttributeAction:
	target=ValueAction '.' attribute=[Attribute];

WriteLocalDataAction:
	localData=[LocalData] '=' value=ValueAction;
	
LiteralAction:
	LiteralIntAction | LiteralDoubleAction | LiteralBooleanAction | LiteralStringAction | LiteralMapAction | LiteralClosure;

LiteralMapAction:
	'{' entries+=LiteralMapEntry* '}' 
;

LiteralCollectionAction:
	'[' values+=ValueAction* ']' 
;

LiteralMapEntry: name=ID ':' value=ValueAction;

LiteralBooleanAction:
	value=BOOLEAN;

LiteralStringAction:
	value=STRING;

LiteralIntAction:
	value=INT;

LiteralDoubleAction:
	value=DOUBLE;

NullValue:
	'null';

terminal BOOLEAN returns EBooleanObject:
	'true' | 'false';

terminal DOUBLE returns EDoubleObject:
	('0'..'9')+ '.' ('0'..'9')+;